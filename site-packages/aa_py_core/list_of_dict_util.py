"""
Utilities for working with lists of dictionaries, where each dictionary has multiple keys whose combined values identify
the dictionary uniquely in the list.
"""
from collections import OrderedDict
from itertools import chain
from typing import List, Dict, Set, Iterable


def merge_dict_lists(
        old_list: Iterable[Dict],
        new_list: Iterable[Dict],
        keys: Set,
) -> List[Dict]:
    """
    Merge two lists (or any iterables) of dictionaries into a new list.

    If a dictionary in `new_list` matches a dictionary in `old_list`, it will overwrite it, but keep its position.
    Match means: Two dictionaries have the same values in every key specified in `keys`.
    Any dictionary in `new_list` which does not match any dictionary in `old_list` will be appended at the end.
    """
    merged = OrderedDict({
        tuple(d[k] for k in keys): d
        for d in chain(old_list, new_list)
    })
    return list(merged.values())
