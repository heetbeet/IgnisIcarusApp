import dataclasses
import os
import signal

import psutil


def kill_pid(pid, missing_ok=False, retries=10000):
    """
    Kill a process by pid and wait for completion.
    """
    # If pid doesn't exist
    if not psutil.pid_exists(pid):
        if missing_ok:
            return None
        else:
            # In order to get correct error
            os.kill(pid, signal.SIGTERM)

    # Otherwise try `retries` times
    i = 0
    while psutil.pid_exists(pid):
        # Try without guard in order to get correct error
        if i == retries:
            os.kill(pid, signal.SIGTERM)
            break

        try:
            os.kill(pid, signal.SIGTERM)
        except OSError:
            pass

        i += 1


@dataclasses.dataclass
class PID:
    pid: int = None
    name: str = None
